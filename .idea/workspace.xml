<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2e1c8125-ebb7-465a-ade9-ebcaf68e8257" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/ConstructionXpert/gateway-service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ConstructionXpert/user-service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/dtos/login-response.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/dtos/login-user-dto.dto.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/dtos/register-user-dto.dto.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/guards/auth.guard.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/guards/role.guard.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/models/Project.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/models/user.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/services/authentication.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/core/services/jwt.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/authentication.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/login/login.component.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/login/login.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/login/login.component.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/login/login.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/register/register.component.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/register/register.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/register/register.component.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/app/features/authentication/register/register.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/construction-frontend/src/environments/environment.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/eureka-server/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/eureka-server/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/project-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/project-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/project-service/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/project-service/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/resource-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/resource-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/resource-service/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/resource-service/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/task-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/task-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/task-service/src/main/java/com/task/config/JwtAuthenticationFilter.java" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/task-service/src/main/java/com/task/config/JwtAuthenticationFilter.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/task-service/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/task-service/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/user-service/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/user-service/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ConstructionXpert/user-service/src/test/java/com/user/UserServiceApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/ConstructionXpert/user-service/src/test/java/com/user/UserServiceApplicationTests.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="JpbToolWindowState">
    <option name="isToolWindowVisible" value="false" />
  </component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 6
}]]></component>
  <component name="ProjectId" id="2lsuQ6Wbi59PafwvASwYmK4HDKl" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.ConstructionXpert: Compose Deployment.executor": "Run",
    "Maven.constructionxpert-services [clean].executor": "Run",
    "Maven.constructionxpert-services [install].executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.EurekaServerApplication.executor": "Run",
    "Spring Boot.GatewayServiceApplication.executor": "Run",
    "Spring Boot.ProjectServiceApplication.executor": "Run",
    "Spring Boot.ResourceServiceApplication.executor": "Run",
    "Spring Boot.TaskServiceApplication.executor": "Run",
    "Spring Boot.UserServiceApplication.executor": "Run",
    "git-widget-placeholder": "auth-project",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/user/Videos/ConstructionXpert-Services-Microservices-Frontend/construction-frontend/src/app/core/services",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "run.configurations.included.in.services": "true",
    "ts.external.directory.path": "C:\\Users\\user\\Videos\\ConstructionXpert-Services-Microservices-Frontend\\construction-frontend\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\user\Videos\ConstructionXpert-Services-Microservices-Frontend\construction-frontend\src\app\core\services" />
      <recent name="C:\Users\user\Videos\ConstructionXpert-Services-Microservices-Frontend\construction-frontend\src\app\features" />
      <recent name="C:\Users\user\Videos\ConstructionXpert-Services-Microservices-Frontend\construction-frontend\src\app\core\dtos" />
      <recent name="C:\Users\user\Videos\ConstructionXpert-Services-Microservices-Frontend\construction-frontend\src\app\core\models" />
      <recent name="C:\Users\user\Videos\ConstructionXpert-Services-Microservices-Frontend\construction-frontend\src\app\core\guards" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.ConstructionXpert: Compose Deployment">
    <configuration name="EurekaServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="eureka-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.constructionxpert.eureka.EurekaServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GatewayServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="gateway-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.gateway.GatewayServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProjectServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="project-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.project.ProjectServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ResourceServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="resource-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.resource.ResourceServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TaskServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="task-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.task.TaskServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="user-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.user.UserServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConstructionXpert: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="ConstructionXpert/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.ConstructionXpert: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2e1c8125-ebb7-465a-ade9-ebcaf68e8257" name="Changes" comment="" />
      <created>1725981086129</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1725981086129</updated>
      <workItem from="1725981087169" duration="6948000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>